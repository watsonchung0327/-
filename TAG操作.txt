D:(切換到D磁碟)
mkdir project(建立project目錄)
cd project(切換到project目錄)
touch index.html(建立檔案，請在git bash中執行)
git init(建立版本庫)
git add .(加入檔案)
git commit -m "新增index.html"(提交並加入註解)
touch style.css(建立檔案，請在git bash中執行)
git add .(加入檔案)
git commit -m "新增style.css"(提交並加入註解)
touch my.js(建立檔案，請在git bash中執行)
git add .(加入檔案)
git commit -m "新增my.js"(提交並加入註解)
git log --oneline(以一列的方式查看記錄檔)
git tag(查目前的tag狀態)
git tag v1.0(設定目前的tag)
git tag(查目前的tag狀態)
git log --oneline(以一列的方式查看記錄檔)
git tag v0.91 a610db2(設定a610db2的tag，以log檔看到的為主)
git log --oneline(以一列的方式查看記錄檔)
git tag -am "bug修改" v0.1(在tag中加上註解)
git show v1.0(主要顯示提交版本的異動)
git tag(查看tag)
git tag -n(查看tag及註解)
git tag -d v1.0(刪除tag v1.0)
git status(顯示修改檔案的清單)
touch 1.txt(建立檔案，請在git bash中執行)
git status(顯示修改檔案的清單)
git add .(加入追蹤全部檔案)
git status(顯示修改檔案的清單)
git rm add.txt(刪除add.txt)
git status(顯示修改檔案的清單)
git commit -m "刪除尚未提交的add.txt"(提交並加入註解)
git status(顯示修改檔案的清單)
touch 123.txt(建立檔案，請在git bash中執行)
git status(顯示修改檔案的清單)
git add .(加入追蹤全部檔案)
git status(顯示修改檔案的清單)
git diff(查看修改檔案的差異)
git commit -m "刪除尚未提交的123.txt"(提交並加入註解)
--------------------------------------------------
git clean -i (可以顯示新增但尚未使用 git add . 加入的未追蹤檔,且可選擇所要處理的動作)
git clean -n (可以顯示新增但尚未使用 git add . 加入的未追蹤檔)
git clean -f (可以顯示新增但尚未使用 git add . 加入的未追蹤檔,且全部刪除)
=======================================================================
GITHUB 的 clone
git clone https://github.com/milkbear201901/phpmember.git(git clone github上的git網址)
git push origin(推到github上，但須回chrome做驗證)
--------------------------------------------------
git remote 查看設定遠端名名稱
git remote remove 遠端名稱
git remote add 遠端名稱 ssh的連線名稱
git push 遠端名稱 master
